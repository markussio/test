<?php

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\Entity\EntityFormDisplay;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\NodeType;

function readtime_entity_extra_field_info() {
  $extra = [];

  foreach (NodeType::loadMultiple() as $bundle) {
    $extra['node'][$bundle->id()]['display']['estimated_read_time'] = [
      'label' => t('Время чтения новости.'),
      'description' => t('Вычисление время чтения новости.'),
      'weight' => 20,
      'visible' => FALSE,
    ];
  }

  return $extra;
}

function readtime_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($display->getComponent('estimated_read_time') && $entity->hasField('body')) {
    if ($entity->body->isEmpty()) 
    {
    $build['estimated_read_time'] = [
      '#type' => 'markup',
      '#markup' => "",
    ];
     }
    else {
      $word_per_minute = 150;
      $word_count = str_word_count(strip_tags($entity->body->value));
      $estimated_read_time = floor(($word_count / $word_per_minute));
      if ($estimated_read_time > 1) {
      $value = \Drupal::translation()
        ->formatPlural($estimated_read_time, '1 minute', '@count minutes');
      $build['estimated_read_time'] = [
      '#type' => 'markup',
      '#markup' => "<p><strong>Чтение новости займет</strong> {$value}</p>",
    ];
    }
    else 
     {
     $build['estimated_read_time'] = [
      '#type' => 'markup',
      '#markup' => "<p><strong>Чтение новости займет меньше минуты</p>",
    ];
     }
    }
  }
}
